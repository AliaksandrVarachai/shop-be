service: product-service

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1

  environment:
#    SQS_URL, SQS_ARN from .env
    REGION: ${self:provider.region}
    SNS_ARN:
      Ref: SNSTopic

  iamRoleStatements:
    - Effect: 'Allow'
      Action: 'sqs:*'
      Resource:
        - ${env:SQS_ARN}
    - Effect: 'Allow'
      Action: 'sns:*'
      Resource:
        Ref: SNSTopic

custom:
  webpack:
    webpackConfig: webpack.config.cjs
    includeModules: true

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

functions:
  getProductsList:
    handler: handlers/getProductsList.default
    events:
      - http:
          path: /products
          method: get
          cors: true
  getProductsById:
    handler: handlers/getProductsById.default
    events:
      - http:
          path: /products/{productId}
          method: get
          cors: true
  createProducts:
    handler: handlers/createProducts.default
    events:
      - http:
          path: /products
          method: post
          cors: true
  catalogBatchProcess:
    handler: handlers/catalogBatchProcess.default
    events:
      - sqs:
          batchSize: 5
          arn: ${env:SQS_ARN}

resources:
  Resources:
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscriptionInfo:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: vorochai@list.ru
        Protocol: email
        TopicArn:
          Ref: SNSTopic
    SNSSubscriptionError:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: aliaksandr_varachai@epam.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
        FilterPolicy:
          category: [error, warn, alert]
